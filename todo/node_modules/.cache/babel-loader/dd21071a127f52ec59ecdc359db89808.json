{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karim\\\\Desktop\\\\KarimDISK\\\\GitHub\\\\web-dev-course-final\\\\todo\\\\src\\\\components\\\\dashboard\\\\todolist\\\\ListTodos.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect, useRef, useMemo, useCallback } from \"react\";\nimport * as MdIcons from \"react-icons/md\";\nimport EditTodo from \"./EditTodo\";\nimport styled from 'styled-components';\nimport Checkbox from \"react-custom-checkbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTodos = _ref => {\n  _s();\n\n  let {\n    allTodos,\n    setTodosChange\n  } = _ref;\n  console.log(allTodos);\n  const [todos, setTodos] = useState([]); //empty array\n  //delete todo function\n\n  async function deleteTodo(id) {\n    try {\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          jwt_token: localStorage.token\n        }\n      });\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n  console.log(todos); // edit todo status\n\n  const handleEditTodoStatus = async (id, description) => {\n    try {\n      const body = {\n        description\n      };\n      console.log(body);\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n      setTodosChange(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To-do Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.length !== 0 && todos[0].todo_id !== null && todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.status ? /*#__PURE__*/_jsxDEV(\"text\", {\n              style: {\n                textDecorationLine: 'line-through'\n              },\n              children: todo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 36\n            }, this) : todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTodo, {\n              todo: todo,\n              setTodosChange: setTodosChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: /*#__PURE__*/_jsxDEV(MdIcons.MdClose, {\n                size: 22\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              label: value,\n              icon: checkboxIcon,\n              name: \"filter-checkboxes\",\n              checked: filterData[filter].values[value],\n              borderColor: \"#AEB7C6\",\n              style: {\n                cursor: \"pointer\",\n                userSelect: \"none\",\n                marginBottom: 10\n              },\n              labelStyle: {\n                marginLeft: 10,\n                marginBottom: 10,\n                color: \"#293241\",\n                fontSize: 14,\n                fontFamily: \"Source Sans Pro\"\n              },\n              onChange: () => updateFilterDataValuesNew(filter, value, !filterData[filter].values[value])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTodos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = ListTodos;\nconst checkboxOne = styled.checkbox`\n  width: 40px;\n  height: 10px;\n  background: #555;\n  margin: 20px 80px;\n  position: relative;\n  border-radius: 3px;\n  label {\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n\n    transition: all .5s ease;\n    cursor: pointer;\n    position: absolute;\n    top: -3px;\n    left: -3px;\n\n    background: #ccc;\n}\n`;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["C:/Users/karim/Desktop/KarimDISK/GitHub/web-dev-course-final/todo/src/components/dashboard/todolist/ListTodos.js"],"names":["React","Fragment","useState","useEffect","useRef","useMemo","useCallback","MdIcons","EditTodo","styled","Checkbox","ListTodos","allTodos","setTodosChange","console","log","todos","setTodos","deleteTodo","id","fetch","method","headers","jwt_token","localStorage","token","filter","todo","todo_id","err","error","message","handleEditTodoStatus","description","body","myHeaders","Headers","append","JSON","stringify","length","map","status","textDecorationLine","value","checkboxIcon","filterData","values","cursor","userSelect","marginBottom","marginLeft","color","fontSize","fontFamily","updateFilterDataValuesNew","checkboxOne","checkbox"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef, useMemo, useCallback } from \"react\";\nimport * as MdIcons from \"react-icons/md\";\nimport EditTodo from \"./EditTodo\";\nimport styled from 'styled-components';\nimport Checkbox from \"react-custom-checkbox\";\n\nconst ListTodos = ({ allTodos, setTodosChange }) => {\n  console.log(allTodos);\n  const [todos, setTodos] = useState([]); //empty array\n\n  //delete todo function\n\n  async function deleteTodo(id) {\n    try {\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n\n  console.log(todos);\n\n  // edit todo status\n\n  const handleEditTodoStatus = async (id, description) => {\n    try {\n      const body = { description };\n      console.log(body)\n\n      const myHeaders = new Headers();\n\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n\n      setTodosChange(true);\n\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table className=\"table mt-5\">\n        <thead>\n          <tr>\n            <th>To-do Tasks</th>\n            <th>Edit Task</th>\n            <th>Delete</th>\n            <th>Done</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          {todos.length !== 0 &&\n            todos[0].todo_id !== null &&\n            todos.map(todo => (\n              \n              <tr key={todo.todo_id}>\n                <td>{todo.status ? <text style={{ textDecorationLine: 'line-through' }}>{todo.description}</text> : todo.description}</td>\n                {/* <td>{todo.description}</td> */}\n                <td>\n                  <EditTodo todo={todo} setTodosChange={setTodosChange} />\n                </td>\n\n                <td>\n                  <button\n                    className=\"btn btn-danger\" \n                   onClick={() => deleteTodo(todo.todo_id)}\n                  >\n                    {/* ㅤㅤ ✕ ㅤㅤ */}\n                    {/* ✕  */}\n                    <MdIcons.MdClose size={22}/>\n                  </button>\n                </td>\n\n                <td>\n                  {/* <checkboxOne type=\"checkbox\" id={`specialCheckBox-${todo.todo_id}`} onChange={(e)=>{handleEditTodoStatus(todo.todo_id, e.target.checked)}} checked={todo.status}>\n                  </checkboxOne> */}\n                  <Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={checkboxIcon}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"filter-checkboxes\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={filterData[filter].values[value]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderColor=\"#AEB7C6\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserSelect: \"none\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelStyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: 10,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#293241\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 14,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Source Sans Pro\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => updateFilterDataValuesNew(filter, value, !filterData[filter].values[value])}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n                </td>\n\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nconst checkboxOne = styled.checkbox`\n  width: 40px;\n  height: 10px;\n  background: #555;\n  margin: 20px 80px;\n  position: relative;\n  border-radius: 3px;\n  label {\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n\n    transition: all .5s ease;\n    cursor: pointer;\n    position: absolute;\n    top: -3px;\n    left: -3px;\n\n    background: #ccc;\n}\n`;\nexport default ListTodos;\n"]},"metadata":{},"sourceType":"module"}