{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\web-dev-course-final\\\\todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\"; //components\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Landing from \"./components/Landing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nfunction App() {\n  _s();\n\n  const checkAuthenticated = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/auth/verify\", {\n        method: \"POST\",\n        headers: {\n          jwt_token: localStorage.token\n        }\n      });\n      const parseRes = await res.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, []);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            component: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Landing, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            component: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            component: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lpbwJc295eTP/lG5AGLUypzYWcU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/GitHub/web-dev-course-final/todo/src/App.js"],"names":["React","Fragment","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","toast","Login","Register","Dashboard","Landing","configure","App","checkAuthenticated","res","fetch","method","headers","jwt_token","localStorage","token","parseRes","json","setIsAuthenticated","err","console","error","message","isAuthenticated","setAuth","boolean","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes,\r\n  Navigate\r\n} from \"react-router-dom\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\n\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport Landing from \"./components/Landing\";\r\n\r\ntoast.configure();\r\n\r\nfunction App() {\r\n  const checkAuthenticated = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/auth/verify\", {\r\n        method: \"POST\",\r\n        headers: { jwt_token: localStorage.token }\r\n      });\r\n\r\n      const parseRes = await res.json();\r\n\r\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuthenticated();\r\n  }, []);\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const setAuth = boolean => {\r\n    setIsAuthenticated(boolean);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Router>\r\n        <div className=\"container\">\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              component={props =>\r\n                !isAuthenticated ? (\r\n                  <Landing {...props} />\r\n                ) : (\r\n                  <Navigate to=\"/dashboard\" />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              component={props =>\r\n                !isAuthenticated ? (\r\n                  <Login {...props} setAuth={setAuth} />\r\n                ) : (\r\n                  <Navigate to=\"/dashboard\" />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/register\"\r\n              component={props =>\r\n                !isAuthenticated ? (\r\n                  <Register {...props} setAuth={setAuth} />\r\n                ) : (\r\n                  <Navigate to=\"/dashboard\" />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/dashboard\"\r\n              component={props =>\r\n                isAuthenticated ? (\r\n                  <Dashboard {...props} setAuth={setAuth} />\r\n                ) : (\r\n                  <Navigate to=\"/login\" />\r\n                )\r\n              }\r\n            />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}