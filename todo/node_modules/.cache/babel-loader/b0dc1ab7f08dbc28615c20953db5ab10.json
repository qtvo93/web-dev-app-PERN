{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karim\\\\Desktop\\\\KarimDISK\\\\GitHub\\\\web-dev-course-final\\\\todo\\\\src\\\\components\\\\dashboard\\\\todolist\\\\Checkbox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkbox = _ref => {\n  let {\n    isChecked,\n    setIsChecked,\n    id\n  } = _ref;\n  let idName = `checkBoxSpecial-${id}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"btn btn-success\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: idName,\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: () => setIsChecked(prev => !prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["C:/Users/karim/Desktop/KarimDISK/GitHub/web-dev-course-final/todo/src/components/dashboard/todolist/Checkbox.js"],"names":["Checkbox","isChecked","setIsChecked","id","idName","prev"],"mappings":";;;AACA,MAAMA,QAAQ,GAAG,QAAoC;AAAA,MAAnC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA0BC,IAAAA;AAA1B,GAAmC;AACjD,MAAIC,MAAM,GAAI,mBAAkBD,EAAG,EAAnC;AACA,sBACI;AAAA,2BAEA;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA,6BACI;AAAO,QAAA,EAAE,EAAEC,MAAX;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,OAAO,EAAEH,SAA5C;AAAwD,QAAA,QAAQ,EAAE,MAAMC,YAAY,CAAEG,IAAD,IAAU,CAACA,IAAZ;AAApF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUC,CAZL;;KAAML,Q;AAcN,eAAeA,QAAf","sourcesContent":["\r\nconst Checkbox = ({ isChecked, setIsChecked,id }) => {\r\n    let idName = `checkBoxSpecial-${id}`\r\n    return (\r\n        <div>\r\n        \r\n        <label className=\"btn btn-success\">\r\n            <input id={idName} type=\"checkbox\" checked={isChecked}  onChange={() => setIsChecked((prev) => !prev)}/>\r\n            {/* <span>{label}</span> */}\r\n        </label>\r\n        \r\n        </div>\r\n      );\r\n    };\r\n  \r\nexport default Checkbox;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}