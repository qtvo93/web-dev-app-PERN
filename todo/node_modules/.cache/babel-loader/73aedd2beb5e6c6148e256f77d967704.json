{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\web-dev-course-final\\\\todo\\\\src\\\\components\\\\dashboard\\\\todolist\\\\InputTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputTodo = _ref => {\n  _s();\n\n  let {\n    setTodosChange\n  } = _ref;\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n      const body = {\n        description\n      };\n      const response = await fetch(\"http://localhost:5000/dashboard/todos\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n      const parseResponse = await response.json();\n      console.log(parseResponse);\n      setTodosChange(true);\n      setDescription(\"\"); // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const onRandomForm = e => {\n    e.preventDefault();\n    let colors = [\"red\", \"blue\", \"green\", \"yellow\"];\n    let randColor = colors[Math.floor(Math.random() * colors.length)];\n    return randColor;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-5\",\n      children: \"Input Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add todo\",\n        className: \"form-control\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success \",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex\",\n      onSubmit: onRandomForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"generate a random todo\",\n        className: \"form-control\",\n        value: onRandomForm,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success \",\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputTodo, \"h9D/T9lgpWSoHPGgGzJJBrwKHw4=\");\n\n_c = InputTodo;\nexport default InputTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"sources":["D:/GitHub/web-dev-course-final/todo/src/components/dashboard/todolist/InputTodo.js"],"names":["React","Fragment","useState","InputTodo","setTodosChange","description","setDescription","onSubmitForm","e","preventDefault","myHeaders","Headers","append","localStorage","token","body","response","fetch","method","headers","JSON","stringify","parseResponse","json","console","log","err","error","message","onRandomForm","colors","randColor","Math","floor","random","length","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\nconst InputTodo = ({ setTodosChange }) => {\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const myHeaders = new Headers();\n\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n\n      const body = { description };\n      const response = await fetch(\"http://localhost:5000/dashboard/todos\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n\n      const parseResponse = await response.json();\n\n      console.log(parseResponse);\n\n      setTodosChange(true);\n      setDescription(\"\");\n\n      // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const onRandomForm = e => {\n    e.preventDefault();\n    let colors = [\"red\",\"blue\",\"green\",\"yellow\"];\n    let randColor = colors[Math.floor(Math.random() * colors.length)];\n    return randColor;\n  }\n  return (\n    <Fragment>\n      <h1 className=\"text-center my-5\">Input Todo</h1>\n      <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          placeholder=\"add todo\"\n          className=\"form-control\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <button className=\"btn btn-success \">Add</button>\n      </form>\n      <form className=\"d-flex\" onSubmit={onRandomForm}>\n        <input\n          type=\"text\"\n          placeholder=\"generate a random todo\"\n          className=\"form-control\"\n          value={onRandomForm}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <button className=\"btn btn-success \">Generate</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default InputTodo;\n"]},"metadata":{},"sourceType":"module"}