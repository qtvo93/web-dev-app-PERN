{"ast":null,"code":"function _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"borderColor\", \"borderRadius\", \"borderStyle\", \"borderWidth\", \"checkbox\", \"className\", \"checked\", \"disabled\", \"containerClassName\", \"containerStyle\", \"label\", \"labelClassName\", \"labelStyle\", \"name\", \"onChange\", \"reference\", \"right\", \"size\", \"style\", \"value\", \"icon\", \"tabIndex\"];\n\nfunction Checkbox(props) {\n  var borderColor = props.borderColor,\n      borderRadius = props.borderRadius,\n      borderStyle = props.borderStyle,\n      borderWidth = props.borderWidth,\n      checkbox = props.checkbox,\n      className = props.className,\n      checked = props.checked,\n      disabled = props.disabled,\n      containerClassName = props.containerClassName,\n      containerStyle = props.containerStyle,\n      label = props.label,\n      labelClassName = props.labelClassName,\n      labelStyle = props.labelStyle,\n      name = props.name,\n      onChange = props.onChange,\n      reference = props.reference,\n      right = props.right,\n      size = props.size,\n      style = props.style,\n      value = props.value,\n      icon = props.icon,\n      tabIndex = props.tabIndex,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useState = React.useState(checked),\n      check = _useState[0],\n      setCheck = _useState[1];\n\n  var toggle = function toggle(e) {\n    e.preventDefault();\n\n    if (disabled) {\n      return null;\n    }\n\n    setCheck(!check);\n    onChange && onChange(!check, e);\n  };\n\n  React.useEffect(function () {\n    setCheck(checked);\n  }, [checked]);\n  return /*#__PURE__*/React__default.createElement(\"label\", {\n    style: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, containerStyle),\n    className: containerClassName,\n    onClick: function onClick(e) {\n      return toggle(e);\n    }\n  }, right && label && /*#__PURE__*/React__default.createElement(\"span\", {\n    className: labelClassName,\n    style: labelStyle\n  }, label) || null, checkbox || /*#__PURE__*/React__default.createElement(\"span\", null, /*#__PURE__*/React__default.createElement(\"div\", {\n    style: _extends({\n      height: size,\n      width: size,\n      borderWidth: borderWidth,\n      borderColor: borderColor,\n      borderStyle: borderStyle,\n      borderRadius: borderRadius\n    }, style, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: disabled ? \"not-allowed\" : \"\"\n    }),\n    tabIndex: tabIndex,\n    onKeyDown: function onKeyDown(e) {\n      if (e.key === 'Enter' || e.key === ' ' || e.key === 'Spacebar') {\n        toggle(e);\n      }\n    },\n    className: className\n  }, check && icon || null, /*#__PURE__*/React__default.createElement(\"input\", _extends({}, rest, {\n    ref: reference,\n    type: \"checkbox\",\n    name: name,\n    checked: check,\n    value: value,\n    onChange: toggle,\n    disabled: disabled,\n    hidden: true\n  })))), !right && label && /*#__PURE__*/React__default.createElement(\"span\", {\n    className: labelClassName,\n    style: labelStyle\n  }, label) || null);\n}\n\nCheckbox.defaultProps = {\n  borderColor: \"#D7C629\",\n  borderStyle: \"solid\",\n  borderWidth: 2,\n  borderRadius: 5,\n  checked: false,\n  disabled: false,\n  right: false,\n  name: \"\",\n  size: 18,\n  style: {},\n  className: \"\",\n  labelStyle: {\n    marginLeft: 5\n  },\n  labelClassName: \"\",\n  containerStyle: {},\n  containerClassName: \"\",\n  value: \"\",\n  onChange: null,\n  icon: /*#__PURE__*/React__default.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#D7C629\",\n      borderRadius: 5,\n      padding: 5\n    }\n  })\n};\nmodule.exports = Checkbox;","map":{"version":3,"mappings":"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","names":["Checkbox","props","borderColor","borderRadius","borderStyle","borderWidth","checkbox","className","checked","disabled","containerClassName","containerStyle","label","labelClassName","labelStyle","name","onChange","reference","right","size","style","value","icon","tabIndex","rest","useState","check","setCheck","toggle","e","preventDefault","useEffect","React","display","alignItems","onClick","height","width","justifyContent","cursor","onKeyDown","key","ref","type","hidden","defaultProps","marginLeft","backgroundColor","padding"],"sources":["C:\\Users\\karim\\node_modules\\react-custom-checkbox\\src\\index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Checkbox(props) {\n  const {\n    borderColor,\n    borderRadius,\n    borderStyle,\n    borderWidth,\n    checkbox,\n    className,\n    checked,\n    disabled,\n    containerClassName,\n    containerStyle,\n    label,\n    labelClassName,\n    labelStyle,\n    name,\n    onChange,\n    reference,\n    right,\n    size,\n    style,\n    value,\n    icon,\n    tabIndex,\n    ...rest\n  } = props;\n  const [check, setCheck] = useState(checked);\n\n  const toggle = (e) => {\n    e.preventDefault();\n    if (disabled) {\n      return null;\n    }\n    setCheck(!check);\n    onChange && onChange(!check, e);\n  };\n\n  useEffect(() => {\n    setCheck(checked);\n  }, [checked]);\n\n  return (\n    <label\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        ...containerStyle,\n      }}\n      className={containerClassName}\n      onClick={(e) => toggle(e)}\n    >\n      {(right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n      {checkbox || (\n        <span>\n          <div\n            style={{\n              height: size,\n              width: size,\n              borderWidth: borderWidth,\n              borderColor: borderColor,\n              borderStyle: borderStyle,\n              borderRadius: borderRadius,\n              ...style,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              cursor: disabled ? \"not-allowed\" : \"\",\n            }}\n            tabIndex={tabIndex}\n            // onKeyPress={(e) => (!disabled ? toggle(e) : null)}\n            // toggle checkbox on press enter or space\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' || e.key === ' ' || e.key === 'Spacebar') {\n                toggle(e);\n              }\n            }}\n            className={className}\n          >\n            {(check && icon) || null}\n            <input\n              {...rest}\n              ref={reference}\n              type=\"checkbox\"\n              name={name}\n              checked={check}\n              value={value}\n              onChange={toggle}\n              disabled={disabled}\n              hidden\n            />\n          </div>\n        </span>\n      )}\n      {(!right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n    </label>\n  );\n};\nCheckbox.defaultProps = {\n  borderColor: \"#D7C629\",\n  borderStyle: \"solid\",\n  borderWidth: 2,\n  borderRadius: 5,\n  checked: false,\n  disabled: false,\n  right: false,\n  name: \"\",\n  size: 18,\n  style: {},\n  className: \"\",\n  labelStyle: { marginLeft: 5 },\n  labelClassName: \"\",\n  containerStyle: {},\n  containerClassName: \"\",\n  value: \"\",\n  onChange: null,\n  icon: (\n    <div style={{ backgroundColor: \"#D7C629\", borderRadius: 5, padding: 5 }} />\n  ),\n};\nexport default Checkbox;"]},"metadata":{},"sourceType":"script"}