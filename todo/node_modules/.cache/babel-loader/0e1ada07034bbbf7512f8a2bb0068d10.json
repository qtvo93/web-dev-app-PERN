{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\web-dev-course-final\\\\todo\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    setAuth\n  } = _ref;\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = inputs;\n\n  const onChange = e => setInputs({ ...inputs,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        email,\n        password\n      };\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Logged in Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5 text-center\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"user_email\",\n        value: email,\n        onChange: e => onChange(e),\n        className: \"form-control my-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => onChange(e),\n        className: \"form-control my-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-block\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/register\",\n      children: \"register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"GIjFpoWpaPtD7Jz1uOOMGoRu+JM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/GitHub/web-dev-course-final/todo/src/components/Login.js"],"names":["React","Fragment","useState","Link","toast","Login","setAuth","inputs","setInputs","email","password","onChange","e","target","name","value","onSubmitForm","preventDefault","body","response","fetch","method","headers","JSON","stringify","parseRes","json","jwtToken","localStorage","setItem","success","error","err","console","message"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\nconst Login = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { email, password };\n      const response = await fetch(\n        \"http://localhost:5000/auth/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n\n      const parseRes = await response.json();\n\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Logged in Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Login</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"user_email\"\n          value={email}\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n      <Link to=\"/register\">register</Link>\n    </Fragment>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}