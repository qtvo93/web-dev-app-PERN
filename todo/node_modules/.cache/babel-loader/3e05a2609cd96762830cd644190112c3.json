{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karim\\\\Desktop\\\\KarimDISK\\\\GitHub\\\\web-dev-course-final\\\\todo\\\\src\\\\components\\\\dashboard\\\\todolist\\\\ListTodos.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport EditTodo from \"./EditTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTodos = _ref => {\n  _s();\n\n  let {\n    allTodos,\n    setTodosChange\n  } = _ref;\n  console.log(allTodos);\n  const [todos, setTodos] = useState([]); //empty array\n  //delete todo function\n\n  async function deleteTodo(id) {\n    try {\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          jwt_token: localStorage.token\n        }\n      });\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To-do Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.length !== 0 && todos[0].todo_id !== null && todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTodo, {\n              todo: todo,\n              setTodosChange: setTodosChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTodos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = ListTodos;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["C:/Users/karim/Desktop/KarimDISK/GitHub/web-dev-course-final/todo/src/components/dashboard/todolist/ListTodos.js"],"names":["React","Fragment","useState","useEffect","EditTodo","ListTodos","allTodos","setTodosChange","console","log","todos","setTodos","deleteTodo","id","fetch","method","headers","jwt_token","localStorage","token","filter","todo","todo_id","err","error","message","length","map","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAiC;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAFkD,CAEV;AAExC;;AAEA,iBAAeU,UAAf,CAA0BC,EAA1B,EAA8B;AAC5B,QAAI;AACF,YAAMC,KAAK,CAAE,yCAAwCD,EAAG,EAA7C,EAAgD;AACzDE,QAAAA,MAAM,EAAE,QADiD;AAEzDC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,SAAS,EAAEC,YAAY,CAACC;AAA1B;AAFgD,OAAhD,CAAX;AAKAR,MAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBT,EAAtC,CAAD,CAAR;AACD,KAPD,CAOE,OAAOU,GAAP,EAAY;AACZf,MAAAA,OAAO,CAACgB,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACD;AACF;;AAIDtB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACL,QAAD,CAAR;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,sBACE,QAAC,QAAD;AAAA,eACG,GADH,eAEE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAGGA,KAAK,CAACgB,MAAN,KAAiB,CAAjB,IACChB,KAAK,CAAC,CAAD,CAAL,CAASY,OAAT,KAAqB,IADtB,IAECZ,KAAK,CAACiB,GAAN,CAAUN,IAAI,iBACZ;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEP,IAAhB;AAAsB,cAAA,cAAc,EAAEd;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,gBADZ;AAEC,cAAA,OAAO,EAAE,MAAMK,UAAU,CAACS,IAAI,CAACC,OAAN,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAASD,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AALJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAlED;;GAAMjB,S;;KAAAA,S;AAqEN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = ({ allTodos, setTodosChange }) => {\n  console.log(allTodos);\n  const [todos, setTodos] = useState([]); //empty array\n\n  //delete todo function\n\n  async function deleteTodo(id) {\n    try {\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n\n\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n\n  console.log(todos);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table className=\"table mt-5\">\n        <thead>\n          <tr>\n            <th>To-do Tasks</th>\n            <th>Edit Task</th>\n            <th>Done</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {}\n\n          {todos.length !== 0 &&\n            todos[0].todo_id !== null &&\n            todos.map(todo => (\n              <tr key={todo.todo_id}>\n                <td>{todo.description}</td>\n                <td>\n                  <EditTodo todo={todo} setTodosChange={setTodosChange} />\n                </td>\n              \n                <td>\n                  <button\n                    className=\"btn btn-danger\" \n                   onClick={() => deleteTodo(todo.todo_id)}\n                  >\n                    {/* ㅤㅤ ✕ ㅤㅤ */}\n                    ✕ \n                  </button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\n\nexport default ListTodos;\n"]},"metadata":{},"sourceType":"module"}