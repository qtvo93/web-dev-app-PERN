{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\web-dev-course-final\\\\todo\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\"; //components\n\nimport InputTodo from \"./todolist/InputTodo\";\nimport ListTodos from \"./todolist/ListTodos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    setAuth\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [allTodos, setAllTodos] = useState([]);\n  const [todosChange, setTodosChange] = useState(false);\n\n  const emailTodos = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/dashboard/\", {\n        method: \"GET\",\n        headers: {\n          jwt_token: localStorage.token\n        }\n      });\n      const parseData = await res.json();\n      const user_rows = parseData;\n      let users = [];\n\n      for (let row of user_rows) {\n        users.push(row.to_id, row.description);\n      } // console.log(parseData);\n\n\n      const user_email = parseData[0].user_email;\n      const user_name = parseData[0].user_name; // console.log(parseData[0].user_email);\n\n      function onClickEmail() {\n        window.open(`mailto:${user_email}?subject=Todo-Tasks-for-user:*${user_name}*&body=${users}`);\n      }\n\n      onClickEmail();\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getProfile = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/dashboard/\", {\n        method: \"GET\",\n        headers: {\n          jwt_token: localStorage.token\n        }\n      });\n      const parseData = await res.json();\n      setAllTodos(parseData);\n      setName(parseData[0].user_name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const logout = async e => {\n    e.preventDefault();\n\n    try {\n      localStorage.removeItem(\"token\");\n      setAuth(false);\n      toast.success(\"Logout successfully\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n    setTodosChange(false);\n  }, [todosChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mt-5 justify-content-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"user name: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => logout(e),\n        className: \"btn btn-warning\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputTodo, {\n      setTodosChange: setTodosChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListTodos, {\n      allTodos: allTodos,\n      setTodosChange: setTodosChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mt-5 justify-content-around\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => emailTodos(e),\n        className: \"btn btn-warning\",\n        children: \"Email todo tasks to yourself\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"590IRP3KDoMQ9jiPMaZRhqhZltU=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/GitHub/web-dev-course-final/todo/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","useState","toast","InputTodo","ListTodos","Dashboard","setAuth","name","setName","allTodos","setAllTodos","todosChange","setTodosChange","emailTodos","res","fetch","method","headers","jwt_token","localStorage","token","parseData","json","user_rows","users","row","push","to_id","description","user_email","user_name","onClickEmail","window","open","err","console","error","message","getProfile","logout","e","preventDefault","removeItem","success"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\n//components\n\nimport InputTodo from \"./todolist/InputTodo\";\nimport ListTodos from \"./todolist/ListTodos\";\n\nconst Dashboard = ({ setAuth }) => {\n  const [name, setName] = useState(\"\");\n  const [allTodos, setAllTodos] = useState([]);\n  const [todosChange, setTodosChange] = useState(false);\n\n  const emailTodos = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/dashboard/\", {\n        method: \"GET\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      const parseData = await res.json();\n\n      const user_rows = parseData;\n      let users = []\n      for (let row of user_rows){\n        users.push(row.to_id,row.description);\n      }\n      // console.log(parseData);\n      const user_email = parseData[0].user_email;\n      const user_name = parseData[0].user_name;\n      // console.log(parseData[0].user_email);\n      function onClickEmail() {\n        window.open(`mailto:${user_email}?subject=Todo-Tasks-for-user:*${user_name}*&body=${users}`);\n      }\n      onClickEmail();\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getProfile = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/dashboard/\", {\n        method: \"GET\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      const parseData = await res.json();\n\n      setAllTodos(parseData);\n\n      setName(parseData[0].user_name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const logout = async e => {\n    e.preventDefault();\n    try {\n      localStorage.removeItem(\"token\");\n      setAuth(false);\n      toast.success(\"Logout successfully\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n    setTodosChange(false);\n  }, [todosChange]);\n\n  return (\n    <div>\n      <div className=\"d-flex mt-5 justify-content-around\">\n        <h2>user name: {name}</h2>\n        <button onClick={e => logout(e)} className=\"btn btn-warning\">\n          Logout\n        </button>\n      </div>\n\n      <InputTodo setTodosChange={setTodosChange} />\n      <ListTodos allTodos={allTodos} setTodosChange={setTodosChange} />\n      <div className=\"d-flex mt-5 justify-content-around\">\n        <button onClick={e => emailTodos(e)} className=\"btn btn-warning\">\n          Email todo tasks to yourself\n        </button>\n      </div>\n    </div>\n    \n    \n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}