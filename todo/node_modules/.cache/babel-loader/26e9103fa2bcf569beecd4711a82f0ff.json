{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karim\\\\Desktop\\\\KarimDISK\\\\GitHub\\\\web-dev-course-final\\\\todo\\\\src\\\\components\\\\dashboard\\\\todolist\\\\EditTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport * as MdIcons from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTodo = _ref => {\n  _s();\n\n  let {\n    todo,\n    setTodosChange\n  } = _ref;\n\n  //editText function\n  const editText = async id => {\n    try {\n      const body = {\n        description\n      };\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n      setTodosChange(true); // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const [description, setDescription] = useState(todo.description);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: 'Source Sans Pro'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": `#id${todo.todo_id}`,\n        children: /*#__PURE__*/_jsxDEV(MdIcons.MdEdit, {\n          size: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: `id${todo.todo_id}`,\n        onClick: () => setDescription(todo.description),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"modal-title\",\n                style: {\n                  fontFamily: 'Source Sans Pro'\n                },\n                children: \"Edit Todo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close\",\n                \"data-dismiss\": \"modal\",\n                onClick: () => setDescription(todo.description),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-warning\",\n                \"data-dismiss\": \"modal\",\n                onClick: () => editText(todo.todo_id),\n                style: {\n                  fontFamily: 'Source Sans Pro'\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                \"data-dismiss\": \"modal\",\n                onClick: () => setDescription(todo.description),\n                style: {\n                  fontFamily: 'Source Sans Pro'\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditTodo, \"8+7bLWetC2qBum+Uv3xZAs90PS0=\");\n\n_c = EditTodo;\nexport default EditTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"sources":["C:/Users/karim/Desktop/KarimDISK/GitHub/web-dev-course-final/todo/src/components/dashboard/todolist/EditTodo.js"],"names":["React","Fragment","useState","MdIcons","EditTodo","todo","setTodosChange","editText","id","body","description","myHeaders","Headers","append","localStorage","token","fetch","method","headers","JSON","stringify","err","console","error","message","setDescription","fontFamily","todo_id","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport * as MdIcons from \"react-icons/md\";\n\nconst EditTodo = ({ todo, setTodosChange }) => {\n  //editText function\n\n  const editText = async id => {\n    try {\n      const body = { description };\n\n      const myHeaders = new Headers();\n\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n\n      setTodosChange(true);\n\n      // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const [description, setDescription] = useState(todo.description);\n  return (\n    <Fragment>\n      <div style={{fontFamily: 'Source Sans Pro'}}>\n      <button\n        type=\"button\"\n        className=\"btn btn-warning\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        <MdIcons.MdEdit size={15}/>\n      </button>\n      {/* id = \"id21\"*/}\n      <div\n        className=\"modal\"\n        id={`id${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\" style={{fontFamily: 'Source Sans Pro'}}>Edit Todo</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                data-dismiss=\"modal\"\n                onClick={() => editText(todo.todo_id)}\n                style={{fontFamily: 'Source Sans Pro'}}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n                style={{fontFamily: 'Source Sans Pro'}}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;\n"]},"metadata":{},"sourceType":"module"}